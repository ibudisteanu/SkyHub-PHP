<?php

//require_once APPPATH.'core/MY_Models.php';
require_once APPPATH.'core/MY_Models.php';

class MY_Model_page extends MY_Models
{
    public $sRepliesContainerId;
    public $sURLName;
    public $sFullURLName;//Breadcrumb Name:    cool/forum/awesome/topic
    public $sFullURLLink;//Breadcrumb URL Link: cat-cool/forum1/category-awesome1/topic1/
    public $sFullURLDomains; //                 forum/forum_category/topic/

    public function __construct($bEnableChildren=true)
    {
        parent::__construct();
        $this->bEnableChildren = $bEnableChildren;
    }

    protected function readCursor($p)
    {
        parent::readCursor($p); // TODO: Change the autogenerated stub

        if (isset($p['RepliesContainerId'])) $this->sRepliesContainerId = (string) $p['RepliesContainerId'];
        if (isset($p['URLName'])) $this->sURLName = $p['URLName'];
        if (isset($p['FullURLName'])) $this->sFullURLName = $p['FullURLName'];
        if (isset($p['FullURLLink'])) $this->sFullURLLink = $p['FullURLLink'];
        if (Isset($p['FullURLDomains'])) $this->sFullURLDomains = $p['FullURLDomains'];
    }

    public function getBreadCrumbArray()//this will divide the Full URL in arrays
    {
        $arrayURLs = explode("/",$this->sFullURLLink) ;
        $arrayDomains = explode("/",$this->sFullURLDomains);
        $array = array(); $sURL = '';

        //var_dump($arrayURLs);
        for ($index=0; $index<count($arrayURLs); $index++)
        {
            $URLElement = $arrayURLs[$index];
            $URLDomain = $arrayDomains[$index];
            $URLDomain = str_replace('_', '/', $URLDomain);

            $sURL .= $URLElement.'/';
            //if ($index==count($arrayURLs)-1) $sURL='';

            if ($sURL != '')
                $sFinalURL = base_url( rtrim($URLDomain, '/').'/'.$sURL);
            else
                $sFinalURL ='';

            array_push($array,array("url"=>$sFinalURL ,"name"=>$URLElement,"domain"=>$URLDomain));
        }
        return $array;
    }

}